â€¢	Questions

â€¢	What is Webpack? 
Webpack is a static module bundler for JavaScript applications â€” it takes all the code from your application and makes it usable in a web browser. Modules are reusable chunks of code built from your appâ€™s JavaScript, node_modules, images, and the CSS styles which are packaged to be easily used in your website. Webpack separates the code based on how it is used in your app, and with this modular breakdown of responsibilities, it becomes much easier to manage, debug, verify, and test your code.

â€¢	What is a bundle in Webpack?
When Webpack processes your application, it builds a dependency graph which maps out the modules that your project needs and generates one or more bundles. A bundle is a distinct grouping of connected code that has been compiled and transformed for the browser.
If one file depends on another (it uses the code from a separate file), Webpack treats this as a dependency. Webpack also takes your non-code assets (images, fonts, styles, etc.) and converts them to dependencies for your application.
Webpack can be broken down into these 5 principals:
Entry
Output
Loaders
Plugins
Mode

â€¢	What is the latest version of Webpack, according to this guide? Webpack 5

â€¢	Which environment does Webpack work in? Development Mode  / Prod Mode

â€¢	What is a dependency graph?
Any time one file depends on another, webpack treats this as a dependency. This allows webpack to take non-code assets, such as images or web fonts, and also provide them as dependencies for your application.
When webpack processes your application, it starts from a list of modules defined on the command line or in its configuration file. Starting from these entry points, webpack recursively builds a dependency graph that includes every module your application needs, then bundles all of those modules into a small number of bundles - often, just one - to be loaded by the browser.
Extra
Bundling your application is especially powerful for HTTP/1.1 clients, as it minimizes the number of times your app has to wait while the browser starts a new request. For HTTP/2, you can also use Code Splitting to achieve best results.

â€¢	What is the name of the package manager that we use with Webpack 5?

â€¢	How would you remove the lodash library using the command line? to use require / inmport for calling/ downloadipng dependency


â€¢	What is the difference between source code and distribution code when working with Webpack 5?
Source code -> actual code
Distribution code -> compiled code 

â€¢	When setting up your project, why might you adjust the package.json file?
Yes

â€¢	what are optimization option ?  Name few ?
optimization.minimize - to minimize bundle file & by default uglify-js
optimization.minimizer - to provide which minimizer technique to use
optimization.splitChunks - The SplitChunksPlugin allows us to extract common dependencies into an existing entry chunk or an entirely new chunk. Always enabled.
optimization.runtimeChunkFinds modules which are shared between chunk and splits them into separate chunks to reduce duplication or separate vendor modules from application modules.
optimization.noEmitOnErrors - Enabled in production mode. Elsewise disabled. Donâ€™t write output assets when compilation errors. unable to use working part of the application. And no broken bundles
optimization.namedModules - module names
optimization.namedChunks - chunks names 
optimization.moduleIds - 
optimization.chunkIds - 
optimization.nodeEnv - to set mode
optimization.mangleWasmImports
optimization.removeAvailableModules
optimization.removeEmptyChunks
optimization.mergeDuplicateChunks
optimization.flagIncludedChunks
optimization.occurrenceOrder
optimization.providedExports
optimization.usedExports
optimization.concatenateModules
optimization.sideEffects
optimization.portableRecords
optimization.mangleExports
optimization.innerGraph
optimization.realContentHash

â€¢ what is CommonsChunksPlugin?
The CommonsChunkPlugin was used to avoid duplicated dependencies across them, but further optimizations were not possible.Since webpack v4, the CommonsChunkPlugin was removed in favor of optimization.splitChunks.

â€¢	What is Module path / Module Resolution ? 
A resolver is a library which helps in locating a module by its absolute path. A module can be required as a dependency from another module as:
The dependency module can be from the application code or a third-party library. The resolver helps webpack find the module code that needs to be included in the bundle for every such require/import statement. webpack uses enhanced-resolve to resolve file paths while bundling modules.

â€¢ Module paths
import 'module';
import 'module/lib/file';
Modules are searched for inside all directories specified in resolve.modules. You can replace the original module path by an alternate path by creating an alias for it using the resolve.alias configuration option.

â€¢	what is MiniCssExtractPlugin?
This plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.

â€¢	What is Dynamic Import in webpack?
The import(module) expression loads the module and returns a promise that resolves into a module object that contains all its exports. It can be called from any place in the code.

â€¢	What is Split chunk cache ?
â€¢	What is the difference between code splitting and modular programming?
â€¢	What is a code chunk?
â€¢	How do dynamic imports differ from entry points?
â€¢	How are preload directives preferable to prefetch directives?
â€¢	What is meant by code linting?
â€¢	What is meant by the term promise?
â€¢	How does SplitChunksPlugin prevent duplication?
â€¢	What does the webpack-bundle-optimize-helper tool offer?
â€¢	What does the webpack-chart plugin do?
â€¢	What is treemapping?
â€¢	what is asset management configurations?
â€¢	What is HtmlWebpackPlugin?
â€¢	Explain Utilizing the manifest?
â€¢	What is the difference in Webpack 5 between configurations and options? 
â€¢	What is a config flag?
â€¢	Which loader is required for loading images into Webpack projects?
â€¢	What type of data file does Webpack allow the import of without the use of a loader?
â€¢	What does Webpack's manifest record indicate?
â€¢	What does the Bail option do?
â€¢	What does the Parallelism option do?
â€¢	What does the Records Input Path option do?
â€¢	What will setting AMD to false do?What is compiling?
â€¢	What is an i18n loader?
â€¢	What is the toolchain that Webpack typically uses to convert ECMA scripts?
â€¢	What is Babel mainly used for?
â€¢	Which loader allows users to add custom handling of Babel's configuration?
â€¢	What does polymer-webpack-loader do?
â€¢	What does polymer-webpack-loader offer a developer?
â€¢	When using the Node.js API, what will the callback function that is provided run?
â€¢ Commands to install dependency & other loader, Plugins etc 
â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	


Table of Contents
ðŸ‘‰ NPM vs. Bower vs. Browserify vs. Gulp vs. Grunt vs. Webpack
ðŸ‘‰ How to bundle an Angular app for production
ðŸ‘‰ What are differences between SystemJS and Webpack?
ðŸ‘‰ How to add font-awesome to Angular 2 + CLI project
ðŸ‘‰ How to load image files with webpack file-loader
ðŸ‘‰ Can someone explain Webpackâ€™s CommonsChunkPlugin
ðŸ‘‰ Angular2 CLI huge vendor bundle: how to improve size for prod?
ðŸ‘‰ HtmlWebpackPlugin injects relative path files which breaks when loading non-root website paths
ðŸ‘‰ Webpack how to build production code and how to use it
ðŸ‘‰ webpack is not recognized as a internal or external command,operable program or batch file
ðŸ‘‰ How to create multiple output paths in Webpack config
ðŸ‘‰ How to add fonts to create-react-app based projects?
ðŸ‘‰ webpack canâ€™t find module if file named jsx
ðŸ‘‰ How to debug Angular with VSCode?
ðŸ‘‰ Path aliases for imports in WebStorm
ðŸ‘‰ Webpack-dev-server compiles files but does not refresh or make compiled javascript available to browser
ðŸ‘‰ Webpack loaders vs plugins; whatâ€™s the difference?
ðŸ‘‰ Webpack vs webpack-dev-server vs webpack-dev-middleware vs webpack-hot-middleware vs etc
ðŸ‘‰ Error: Cannot resolve module â€˜style-loaderâ€™
ðŸ‘‰ Angular2: import external js file into component
ðŸ‘‰ Correct path for img on React.js
ðŸ‘‰ How to deploy node that uses Webpack to heroku
ðŸ‘‰ Webpack import returns undefined, depending on the order of imports
ðŸ‘‰ Serving static assets in webpack dev server
ðŸ‘‰ Conflict: Multiple assets emit to the same filename
ðŸ‘‰ Is it possible to write webpack config in typescript?
ðŸ‘‰ How to minify ES6 code using Webpack?
ðŸ‘‰ What is the value of using Webpack with HTTP/2
ðŸ‘‰ How to use images in css with Webpack
ðŸ‘‰ Avoiding relative paths in Angular CLI


â€¢	URLs:

â€¢	https://www.fullstack.cafe/webpack
â€¢	https://github.com/styopdev/webpack-interview-questions/blob/master/answers.md
â€¢	https://github.com/styopdev/webpack-interview-questions
â€¢	http://www.lib4dev.in/info/styopdev/webpack-interview-questions/92639750
â€¢	https://github.com/kukuu/webpack
â€¢	https://developpaper.com/collection-of-webpack-interview-questions/
â€¢	https://blog.jakoblind.no/how-webpack-decides-what-to-bundle/
â€¢ https://docs.w3cub.com/webpack/plugins/mini-css-extract-plugin/


â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	â€¢	



